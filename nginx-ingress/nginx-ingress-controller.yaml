apiVersion: extensions/v1beta1
kind: Deployment
#kind: DaemonSet 
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kube-system
  template:
    metadata:
      labels:
        app: kube-system
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      hostNetwork: true
      #dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: nginx-ingress-controller
          #image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.9.0
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.17.0
          lifecycle:
              postStart:
                exec:
                  #command: ["/bin/bash","-c", "echo test>/data/logs/nginx/test.log"]
                  command: ["/bin/bash","-c", "ls /var/log/nginx"]
          volumeMounts:
            - name: log-storage
              mountPath: /var/log/nginx/
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
            hostPort: 80
          - name: https
            containerPort: 443
            hostPort: 443
          - name: monitor
            containerPort: 18080
            hostPort: 18080
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: log-storage
          hostPath:
             path: /data/logs/nginx/
     # nodeSelector:
         #edug: traefik 
     #    edug: nginx 
